---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app whisparr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      repository: ghcr.io/hotio/whisparr
      tag: nightly-ad909e8
    env:
      TZ: "${TIMEZONE}"
      PUID: 100
      PGID: 100
      WHISPARR__INSTANCE_NAME: Whisparr
      WHISPARR__PORT: &port 80
      WHISPARR__BRANCH: nightly
      WHISPARR__APPLICATION_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
      WHISPARR__LOG_LEVEL: info
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "filmstrip"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/sonarr/aquamarine.css"></head>';
            sub_filter_once on;
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    # podSecurityContext:
    #   runAsUser: 100
    #   runAsGroup: 100
    #   fsGroup: 100
    #   fsGroupChangePolicy: "OnRootMismatch"
    persistence:
      config:
        enabled: true
        existingClaim: whisparr-config
      media:
        enabled: true
        type: nfs
        server: "${NFS_SERVER}"
        path: "/mnt/user/media/other"
      downloads:
        enabled: true
        type: nfs
        server: "${NFS_SERVER}"
        path: "/mnt/user/downloads/"