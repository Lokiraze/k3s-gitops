---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app authelia
  namespace: security
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.authelia.com
      chart: authelia
      version: 0.8.45
      sourceRef:
        kind: HelmRepository
        name: authelia
        namespace: flux-system
      interval: 5m
  values:
    image:
      tag: 4.36.2
    domain: "${SECRET_DOMAIN}"
    pod:
      env:
        - name: TZ
          value: "${TIMEZONE}"
    ingress:
      enabled: true
      className: nginx
      tls:
        enabled: true
        secret: "authelia-tls"
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_PUBLIC_DOMAIN}"
        external-dns/is-public: "true"
      subdomain: auth
    configMap:
      enabled: true
      access_control:
        default_policy: deny
        networks:
          - name: private
            networks:
              - 10.0.0.0/8
              - 172.16.0.0/12
              - 192.168.0.0/16
        rules:
          - domain:
              - auth.${SECRET_DOMAIN}
              - requests.${SECRET_DOMAIN}
              - media.${SECRET_DOMAIN}
              - music.${SECRET_DOMAIN}
            policy: bypass
          - domain:
              - movies.${SECRET_DOMAIN}
              - grooves.${SECRET_DOMAIN}
              - tv.${SECRET_DOMAIN}
              - prowlarr.${SECRET_DOMAIN}
              - books.${SECRET_DOMAIN}
            policy: bypass
            networks:
              - private
            resources:
              - '^/api([/?].*)?$'
          - domain:
              - prowlarr.${SECRET_DOMAIN}
              - whisparr.${SECRET_DOMAIN}
              - stash.${SECRET_DOMAIN}
              - zwave.${SECRET_DOMAIN}
            subject: ["group:users"]
            policy: deny
          - domain:
              - "${SECRET_DOMAIN}"
            networks:
              - private
            policy: bypass
          - domain:
              - "${SECRET_DOMAIN}"
            policy: bypass
            resources:
              - '^/.well-known([/?].*)?$'
          - domain:
              - "*.${SECRET_DOMAIN}"
              - "${SECRET_DOMAIN}"
            policy: one_factor
      storage:
        postgres:
          enabled: true
          host: authelia-postgresql.security.svc.cluster.local
          port: 5432
          database: authelia
          username: authelia
          ssl:
            mode: disable
      session:
        redis:
          enabled: true
          enabledSecret: true
          username: ""
          host: authelia-redis
          port: 6379
          database_index: 0
      authentication_backend:
        password_reset:
          disable: false
        ldap:
          implementation: custom
          url: "ldap://${NFS_SERVER}:3890"
          username_attribute: uid
          additional_users_dn: ou=people
          additional_groups_dn: ou=groups
          base_dn: ${SECRET_LDAP_BASE_DN}
          user: uid=${SECRET_LDAP_ADMIN_USERNAME},ou=people,${SECRET_LDAP_BASE_DN}
          users_filter: "(&({username_attribute}={input})(objectClass=person))"
          groups_filter: "(member={dn})"
      notifier:
        filesystem:
          enabled: true
        smtp:
          enabled: false
          enabledSecret: true
          username: ${SECRET_SMTP_USER}
          host: ${SECRET_SMTP_HOST}
          port: 587
          sender: ${SECRET_SMTP_USER}
          identifier: localhost
          subject: "[Authelia] {title}"
          startup_check_address: ${SECRET_SMTP_USER}

      identity_provider:
        oidc:
          enabled: true
          cors:
            endpoints:
              - authorization
              - token
              - revocation
              - introspection
              - userinfo
            allowed_origins:
              - https://${SECRET_DOMAIN}
        clients:
          - id: ${SECRET_VIKUNJA_CLIENT_ID}
            secret: ${SECRET_VIKUNJA_CLIENT_SECRET}
            description: Vikunja
            redirect_uris:
              - https://todo.${SECRET_DOMAIN}/auth/openid/
            scopes:
              - openid
              - email
              - profile
          - id: ${SECRET_HARBOR_CLIENT_ID}
            secret: ${SECRET_HARBOR_CLIENT_SECRET}
            description: Harbor
            redirect_uris:
              - https://harbor.${SECRET_DOMAIN}/oidc/callback
            scopes:
              - openid
              - email
              - profile
              - offline_access

    secret:
      ldap:
        key: LDAP_PASSWORD
        value: ${SECRET_LDAP_ADMIN_PASSWORD}
      smtp:
        key: SMTP_PASSWORD
        value: ${SECRET_SMTP_PASSWORD}
      storage:
        key: STORAGE_PASSWORD
        value: ${SECRET_AUTH_POSTGRES_PASSWORD}
      redis:
        key: REDIS_PASSWORD
        value: ${SECRET_AUTH_REDIS_PASSWORD}
      oidcPrivateKey:
        value: ${SECRET_AUTH_OIDC_PRIVATE_KEY}
      oidcHMACSecret:
        value: ${SECRET_AUTH_OIDC_HMAC}
