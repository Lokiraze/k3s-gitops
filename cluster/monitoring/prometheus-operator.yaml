---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
  annotations:
    fluxcd.io/ignore: "false"
    fluxcd.io/automated: "false"
    # fluxcd.io/tag.grafana: semver:~7
spec:
  releaseName: prometheus-operator
  helmVersion: v3
  chart:
    repository: https://prometheus-community.github.io/helm-charts
    name: kube-prometheus-stack
    version: 12.12.1
  values:
    defaultRules:
      rules:
        kubeApiserverAvailability: true
        kubeApiserver: true
    server:
      resources:
        requests:
          memory: 1000Mi
          cpu: 25m
        limits:
          memory: 2000Mi
    prometheusOperator:
      image:
        tag: v0.42.1-arm64
      tlsProxy:
        image:
          repository: raspbernetes/ghostunnel
      createCustomResource: false
      prometheusConfigReloaderImage:
        repository: quay.io/coreos/prometheus-config-reloader
        tag: v0.39.0
      configmapReloadImage:
        repository: jimmidyson/configmap-reload
        tag: v0.3.0
    alertmanager:
      enabled: false
    nodeExporter:
      serviceMonitor:
        relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
          - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node
    grafana:
      image:
        repository: grafana/grafana
        tag: 7.3.6
      deploymentStrategy:
        type: Recreate
      persistence:
        enabled: false
        storageClassName: "nfs-client"
        size: 10Gi
        accessModes:
        - ReadWriteOnce
      # extraContainers: |
      #   - name: renderer
      #     image: grafana/grafana-image-renderer:latest
      env:
        GF_EXPLORE_ENABLED: true
        GF_PANELS_DISABLE_SANITIZE_HTML: true
        # GF_RENDERING_SERVER_URL: http://localhost:8081/render
        # GF_RENDERING_CALLBACK_URL: http://localhost:3000/
        GF_LOG_FILTERS: rendering:debug
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
      sidecar:
        image:
          tag: 1.3.0
        datasources:
          enabled: true
          # Disable for thanos
          defaultDatasourceEnabled: true
        dashboards:
          enabled: true
          searchNamespace: ALL
      plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            allowUiUpdates: true
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
      dashboards:
        default:
          nginx-dashboard:
            url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
            datasource: Prometheus
          # flux:
          #   url: https://raw.githubusercontent.com/fluxcd/flux/master/chart/flux/dashboards/flux-dashboard.json
          #   datasource: Prometheus
          # helm-operator:
          #   url: https://raw.githubusercontent.com/fluxcd/helm-operator/master/chart/helm-operator/dashboards/helm-operator-dashboard.json
          #   datasource: Prometheus
          # Ref: https://grafana.com/grafana/dashboards/11310
          # unifi-client-dpi:
          #   gnetId: 11310
          #   revision: 4
          #   datasource: Prometheus
          # Ref: https://grafana.com/grafana/dashboards/11315
          # unifi-client-insights:
          #   gnetId: 11315
          #   revision: 8
          #   datasource: Prometheus
          # Ref: https://grafana.com/grafana/dashboards/11311
          # unifi-network-sites:
          #   gnetId: 11311
          #   revision: 4
          #   datasource: Prometheus
          # Ref: https://grafana.com/grafana/dashboards/11314
          # unifi-uap-insights:
          #   gnetId: 11314
          #   revision: 9
          #   datasource: Prometheus
          # Ref: https://grafana.com/grafana/dashboards/11313
          # unifi-usg-insights:
          #   gnetId: 11313
          #   revision: 8
          #   datasource: Prometheus
          # Ref: https://grafana.com/grafana/dashboards/11312
          # unifi-usw-insights:
          #   gnetId: 11312
          #   revision: 8
          #   datasource: Prometheus
          # version-checker:
          #   gnetId: 12833
          #   revision: 1
          #   datasource: Prometheus
      grafana.ini:
        paths:
          data: /var/lib/grafana/data
          logs: /var/log/grafana
          plugins: /var/lib/grafana/plugins
          provisioning: /etc/grafana/provisioning
        analytics:
          check_for_updates: true
        log:
          mode: console
        grafana_net:
          url: https://grafana.net
    kubeEtcd:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    kubelet:
      serviceMonitor:
        metricRelabelings:
        - action: replace
          sourceLabels:
          - node
          targetLabel: instance
    prometheus:
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
      prometheusSpec:
        # replicas: 2
        # replicaExternalLabelName: "replica"
        ruleSelector: {}
        ruleNamespaceSelector: {}
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        retention: 60d
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: "nfs-client"
              resources:
                requests:
                  storage: 50Gi
  valueFileSecrets:
  - name: "prometheus-operator-values"